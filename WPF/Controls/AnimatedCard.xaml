<!-- E:\kp\4 invoice\WPF\Controls\AnimatedCard.xaml -->
<UserControl x:Class="InvoiceApp.WPF.Controls.AnimatedCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors">

    <UserControl.Resources>
        <!-- Hover Animation -->
        <Storyboard x:Key="HoverInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(materialDesign:ElevationAssist.Elevation)"
                           To="8" Duration="0:0:0.2">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                           To="1.02" Duration="0:0:0.2">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                           To="1.02" Duration="0:0:0.2">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Hover Out Animation -->
        <Storyboard x:Key="HoverOutAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(materialDesign:ElevationAssist.Elevation)"
                           To="2" Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                           To="1.0" Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                           To="1.0" Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Click Animation -->
        <Storyboard x:Key="ClickAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                           To="0.98" Duration="0:0:0.1" AutoReverse="True">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                           To="0.98" Duration="0:0:0.1" AutoReverse="True">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Loading Animation -->
        <Storyboard x:Key="LoadingAnimation" RepeatBehavior="Forever">
            <DoubleAnimation Storyboard.TargetName="LoadingIcon"
                           Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                           From="0" To="360" Duration="0:0:1"/>
        </Storyboard>

        <!-- Fade In Animation -->
        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                           From="0" To="1" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                           From="20" To="0" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <!-- Main Card -->
    <materialDesign:Card x:Name="MainCard"
                         Background="{DynamicResource CardBrush}"
                         materialDesign:ElevationAssist.Elevation="2"
                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                         Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType=UserControl}}"
                         Margin="{Binding Margin, RelativeSource={RelativeSource AncestorType=UserControl}}"
                         Cursor="{Binding IsClickable, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                 Converter={StaticResource BooleanToCursorConverter}}">
        
        <materialDesign:Card.RenderTransform>
            <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform X="0" Y="0"/>
            </TransformGroup>
        </materialDesign:Card.RenderTransform>

        <materialDesign:Card.Style>
            <Style TargetType="materialDesign:Card" BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                <Style.Triggers>
                    <!-- Loading State -->
                    <DataTrigger Binding="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                        <Setter Property="Opacity" Value="0.7"/>
                    </DataTrigger>
                    
                    <!-- Disabled State -->
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                    </DataTrigger>
                    
                    <!-- Hover Effects -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding IsClickable, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True"/>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource HoverInAnimation}"/>
                        </MultiDataTrigger.EnterActions>
                        <MultiDataTrigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource HoverOutAnimation}"/>
                        </MultiDataTrigger.ExitActions>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </materialDesign:Card.Style>

        <materialDesign:Card.InputBindings>
            <MouseBinding Gesture="LeftClick" 
                          Command="{Binding ClickCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        </materialDesign:Card.InputBindings>

        <Grid>
            <!-- Main Content -->
            <Grid x:Name="ContentGrid" 
                  Visibility="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}, 
                              Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Header Section -->
                <Grid Grid.Row="0" 
                      Visibility="{Binding HasHeader, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                  Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Header Icon -->
                    <materialDesign:PackIcon Grid.Column="0"
                                           Kind="{Binding HeaderIcon, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                           Width="24" Height="24"
                                           Foreground="{Binding HeaderIconBrush, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                           VerticalAlignment="Center"
                                           Margin="0,0,12,0"
                                           Visibility="{Binding HeaderIcon, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                                       Converter={StaticResource NullToVisibilityConverter}}"/>

                    <!-- Header Content -->
                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <TextBlock Text="{Binding HeaderTitle, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                   Style="{DynamicResource ModernHeadline3}"
                                   Margin="0,0,0,4"
                                   TextTrimming="CharacterEllipsis"
                                   Visibility="{Binding HeaderTitle, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                               Converter={StaticResource NullToVisibilityConverter}}"/>
                        
                        <TextBlock Text="{Binding HeaderSubtitle, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                   Style="{DynamicResource ModernBody2}"
                                   TextTrimming="CharacterEllipsis"
                                   Visibility="{Binding HeaderSubtitle, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                               Converter={StaticResource NullToVisibilityConverter}}"/>
                    </StackPanel>

                    <!-- Header Actions -->
                    <StackPanel Grid.Column="2" 
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Visibility="{Binding HasHeaderActions, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                            Converter={StaticResource BooleanToVisibilityConverter}}">
                        
                        <!-- Custom header actions would go here -->
                        <ContentPresenter Content="{Binding HeaderActions, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                    </StackPanel>
                </Grid>

                <!-- Divider -->
                <Separator Grid.Row="0" 
                          Margin="0,16,0,0"
                          Visibility="{Binding HasHeader, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                      Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <!-- Main Content Area -->
                <ContentPresenter Grid.Row="1" 
                                  Content="{Binding Content, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                  Margin="0,16,0,16"/>

                <!-- Footer Section -->
                <Grid Grid.Row="2"
                      Visibility="{Binding HasFooter, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                  Converter={StaticResource BooleanToVisibilityConverter}}">
                    
                    <!-- Divider -->
                    <Separator Margin="0,0,0,16"/>
                    
                    <!-- Footer Content -->
                    <ContentPresenter Content="{Binding FooterContent, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      Margin="0,16,0,0"/>
                </Grid>
            </Grid>

            <!-- Loading Overlay -->
            <Grid x:Name="LoadingOverlay"
                  Background="{DynamicResource SurfaceBrush}"
                  Opacity="0.8"
                  Visibility="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}, 
                              Converter={StaticResource BooleanToVisibilityConverter}}">
                
                <StackPanel HorizontalAlignment="Center" 
                           VerticalAlignment="Center">
                    
                    <materialDesign:PackIcon x:Name="LoadingIcon"
                                           Kind="Loading"
                                           Width="32" Height="32"
                                           Foreground="{DynamicResource PrimaryBrush}"
                                           HorizontalAlignment="Center">
                        <materialDesign:PackIcon.RenderTransform>
                            <RotateTransform/>
                        </materialDesign:PackIcon.RenderTransform>
                    </materialDesign:PackIcon>
                    
                    <TextBlock Text="{Binding LoadingText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                               Style="{DynamicResource ModernBody2}"
                               HorizontalAlignment="Center"
                               Margin="0,8,0,0"
                               Visibility="{Binding LoadingText, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                           Converter={StaticResource NullToVisibilityConverter}}"/>
                </StackPanel>
            </Grid>

            <!-- Status Indicator -->
            <Border x:Name="StatusIndicator"
                    Background="{Binding StatusBrush, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Width="4"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    Visibility="{Binding HasStatus, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <!-- Selection Indicator -->
            <Border x:Name="SelectionIndicator"
                    BorderBrush="{DynamicResource PrimaryBrush}"
                    BorderThickness="2"
                    CornerRadius="4"
                    Visibility="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=UserControl}, 
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>

        <!-- Behaviors -->
        <behaviors:Interaction.Triggers>
            <!-- Loaded Animation -->
            <behaviors:EventTrigger EventName="Loaded">
                <behaviors:BeginStoryboard Storyboard="{StaticResource FadeInAnimation}"/>
            </behaviors:EventTrigger>
            
            <!-- Click Animation -->
            <behaviors:EventTrigger EventName="PreviewMouseLeftButtonDown">
                <behaviors:BeginStoryboard Storyboard="{StaticResource ClickAnimation}"/>
            </behaviors:EventTrigger>
            
            <!-- Loading Animation -->
            <behaviors:DataTrigger Binding="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                <behaviors:BeginStoryboard Storyboard="{StaticResource LoadingAnimation}"/>
            </behaviors:DataTrigger>
        </behaviors:Interaction.Triggers>
    </materialDesign:Card>
</UserControl>