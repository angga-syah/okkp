<!-- E:\kp\4 invoice\WPF\Controls\SearchableComboBox.xaml -->
<UserControl x:Class="InvoiceApp.WPF.Controls.SearchableComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors">
    
    <UserControl.Resources>
        <!-- Loading Animation -->
        <Storyboard x:Key="LoadingAnimation" RepeatBehavior="Forever">
            <DoubleAnimation Storyboard.TargetName="LoadingIcon"
                           Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                           From="0" To="360" Duration="0:0:1"/>
        </Storyboard>

        <!-- Search Result Item Template -->
        <DataTemplate x:Key="SearchResultItemTemplate">
            <Border Background="Transparent" 
                    Padding="12,8"
                    BorderThickness="0,0,0,1"
                    BorderBrush="{DynamicResource DividerBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Main content -->
                    <StackPanel Grid.Column="0">
                        <TextBlock Text="{Binding DisplayName}" 
                                   Style="{DynamicResource ModernBody1}"
                                   FontWeight="Medium"
                                   TextTrimming="CharacterEllipsis"/>
                        <TextBlock Text="{Binding SecondaryText}" 
                                   Style="{DynamicResource ModernBody2}"
                                   Margin="0,2,0,0"
                                   Opacity="0.7"
                                   TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                    
                    <!-- Match type indicator -->
                    <Border Grid.Column="1" 
                            Background="{DynamicResource PrimaryLightBrush}"
                            CornerRadius="8"
                            Padding="4,2"
                            Margin="8,0,0,0"
                            Visibility="{Binding ShowMatchType, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock Text="{Binding MatchTypeText}" 
                                   Style="{DynamicResource ModernCaption}"
                                   Foreground="{DynamicResource PrimaryBrush}"
                                   FontWeight="Medium"/>
                    </Border>
                </Grid>
                
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </DataTemplate>

        <!-- No Results Template -->
        <DataTemplate x:Key="NoResultsTemplate">
            <Border Padding="16" HorizontalAlignment="Center">
                <StackPanel HorizontalAlignment="Center">
                    <materialDesign:PackIcon Kind="SearchOff" 
                                           Width="32" Height="32"
                                           Foreground="{DynamicResource TextHintBrush}"
                                           HorizontalAlignment="Center"/>
                    <TextBlock Text="No results found" 
                               Style="{DynamicResource ModernBody2}"
                               Margin="0,8,0,0"
                               HorizontalAlignment="Center"/>
                    <TextBlock Text="Try adjusting your search terms" 
                               Style="{DynamicResource ModernCaption}"
                               Margin="0,4,0,0"
                               HorizontalAlignment="Center"/>
                </StackPanel>
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <!-- Main Content -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Search TextBox with Material Design styling -->
        <Border Grid.Row="0" 
                Background="{DynamicResource SurfaceBrush}"
                BorderBrush="{DynamicResource DividerBrush}"
                BorderThickness="1"
                CornerRadius="4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Search Icon -->
                <materialDesign:PackIcon Grid.Column="0" 
                                       Kind="Search" 
                                       Width="20" Height="20"
                                       Margin="12,0,8,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource TextHintBrush}"/>

                <!-- Search TextBox -->
                <TextBox x:Name="SearchTextBox"
                         Grid.Column="1"
                         Padding="0,12"
                         BorderThickness="0"
                         Background="Transparent"
                         FontFamily="{DynamicResource ModernFontFamily}"
                         FontSize="14"
                         Foreground="{DynamicResource TextPrimaryBrush}"
                         materialDesign:HintAssist.Hint="{Binding PlaceholderText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                         materialDesign:HintAssist.IsFloating="False"
                         Text="{Binding SearchText, RelativeSource={RelativeSource AncestorType=UserControl}, UpdateSourceTrigger=PropertyChanged}">
                    
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="TextChanged">
                            <behaviors:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                                      MethodName="OnSearchTextChanged"/>
                        </behaviors:EventTrigger>
                        <behaviors:EventTrigger EventName="PreviewKeyDown">
                            <behaviors:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                                      MethodName="OnKeyDown"/>
                        </behaviors:EventTrigger>
                        <behaviors:EventTrigger EventName="GotFocus">
                            <behaviors:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                                      MethodName="OnTextBoxGotFocus"/>
                        </behaviors:EventTrigger>
                        <behaviors:EventTrigger EventName="LostFocus">
                            <behaviors:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                                      MethodName="OnTextBoxLostFocus"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </TextBox>

                <!-- Loading Indicator -->
                <materialDesign:PackIcon x:Name="LoadingIcon"
                                       Grid.Column="2" 
                                       Kind="Loading" 
                                       Width="16" Height="16"
                                       Margin="8,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryBrush}"
                                       Visibility="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon.RenderTransform>
                        <RotateTransform/>
                    </materialDesign:PackIcon.RenderTransform>
                    <materialDesign:PackIcon.Style>
                        <Style TargetType="materialDesign:PackIcon">
                            <Style.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource LoadingAnimation}"/>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <StopStoryboard Storyboard="{StaticResource LoadingAnimation}"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:PackIcon.Style>
                </materialDesign:PackIcon>

                <!-- Clear Button -->
                <Button Grid.Column="3" 
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Width="32" Height="32"
                        Padding="0"
                        Margin="0,0,4,0"
                        Command="{Binding ClearCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        Visibility="{Binding CanClear, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
                </Button>
            </Grid>
        </Border>

        <!-- Search Results Popup -->
        <Popup x:Name="SearchResultsPopup"
               Grid.Row="1"
               PlacementTarget="{Binding ElementName=SearchTextBox}"
               Placement="Bottom"
               AllowsTransparency="True"
               PopupAnimation="Fade"
               StaysOpen="False"
               IsOpen="{Binding IsDropdownOpen, RelativeSource={RelativeSource AncestorType=UserControl}}">
            
            <Border Background="{DynamicResource SurfaceBrush}"
                    BorderBrush="{DynamicResource DividerBrush}"
                    BorderThickness="1"
                    CornerRadius="4"
                    MinWidth="{Binding ActualWidth, ElementName=SearchTextBox}"
                    MaxWidth="400"
                    MaxHeight="300"
                    materialDesign:ElevationAssist.Elevation="Dp4">
                
                <!-- Results List -->
                <ScrollViewer VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl x:Name="SearchResultsList"
                                  ItemsSource="{Binding SearchResults, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                  ItemTemplate="{StaticResource SearchResultItemTemplate}">
                        
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl">
                                <Style.Triggers>
                                    <!-- Show "No Results" when no items -->
                                    <DataTrigger Binding="{Binding HasResults, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ContentPresenter ContentTemplate="{StaticResource NoResultsTemplate}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsVirtualizing="True" 
                                                      VirtualizationMode="Recycling"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <EventSetter Event="MouseLeftButtonDown" Handler="OnResultItemClick"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </ScrollViewer>

                <!-- Quick Actions (if enabled) -->
                <Border Background="{DynamicResource DividerBrush}"
                        Height="1"
                        Margin="0,0,0,0"
                        Visibility="{Binding ShowQuickActions, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="8"
                           Visibility="{Binding ShowQuickActions, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    
                    <Button Style="{DynamicResource ModernTextButtonStyle}"
                            Content="Add New"
                            Command="{Binding AddNewCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                            Margin="4,0"/>
                    
                    <Button Style="{DynamicResource ModernTextButtonStyle}"
                            Content="Show All"
                            Command="{Binding ShowAllCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                            Margin="4,0"/>
                </StackPanel>
            </Border>
        </Popup>
        
        <!-- Validation Error Display -->
        <TextBlock Grid.Row="1"
                   Text="{Binding ValidationError, RelativeSource={RelativeSource AncestorType=UserControl}}"
                   Style="{DynamicResource ErrorMessageStyle}"
                   Margin="0,4,0,0"
                   Visibility="{Binding HasValidationError, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>