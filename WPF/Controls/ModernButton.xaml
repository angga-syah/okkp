<UserControl x:Class="InvoiceApp.WPF.Controls.ModernButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="40" d:DesignWidth="120">

    <UserControl.Resources>
        
        <!-- Modern Button Style -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="MinHeight" Value="36"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <materialDesign:Card x:Name="Card"
                                             Background="{TemplateBinding Background}"
                                             materialDesign:ElevationAssist.Elevation="{Binding Path=(materialDesign:ElevationAssist.Elevation), RelativeSource={RelativeSource TemplatedParent}}"
                                             materialDesign:RippleAssist.IsCentered="False"
                                             materialDesign:RippleAssist.RippleSizeMultiplier="1"
                                             materialDesign:RippleAssist.Feedback="{TemplateBinding materialDesign:RippleAssist.Feedback}"
                                             ClipToBounds="True"
                                             UniformCornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            
                            <Grid>
                                <Border x:Name="Border"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                                
                                <materialDesign:Ripple x:Name="Ripple"
                                                       Content="{TemplateBinding Content}"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                                       Focusable="False"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       Padding="{TemplateBinding Padding}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </materialDesign:Card>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                            </Trigger>
                            
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Card" Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
                            </Trigger>
                            
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Card" Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
                            </Trigger>
                            
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.38"/>
                                <Setter TargetName="Card" Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Outlined Button Style -->
        <Style x:Key="OutlinedButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Text Button Style -->
        <Style x:Key="TextButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
            <Setter Property="Padding" Value="8,4"/>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Icon Button Style -->
        <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="20"/>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Button x:Name="MainButton"
            Style="{DynamicResource ModernButtonStyle}"
            Content="{Binding Text, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Command="{Binding Command, RelativeSource={RelativeSource AncestorType=UserControl}}"
            CommandParameter="{Binding CommandParameter, RelativeSource={RelativeSource AncestorType=UserControl}}"
            IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Width="{Binding Width, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Height="{Binding Height, RelativeSource={RelativeSource AncestorType=UserControl}}"
            MinWidth="{Binding MinWidth, RelativeSource={RelativeSource AncestorType=UserControl}}"
            MinHeight="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=UserControl}}"
            HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=UserControl}}"
            VerticalAlignment="{Binding VerticalAlignment, RelativeSource={RelativeSource AncestorType=UserControl}}"
            materialDesign:ButtonAssist.CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=UserControl}}"
            materialDesign:ElevationAssist.Elevation="{Binding Elevation, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Click="MainButton_Click">
        
        <!-- Button Content Template -->
        <Button.ContentTemplate>
            <DataTemplate>
                <StackPanel Orientation="{Binding IconPosition, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource IconPositionToOrientationConverter}}">
                    
                    <!-- Icon -->
                    <materialDesign:PackIcon x:Name="ButtonIcon"
                                             Kind="{Binding Icon, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                             Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                             Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                             VerticalAlignment="Center"
                                             Visibility="{Binding ShowIcon, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IconPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Left">
                                        <Setter Property="Margin" Value="0,0,8,0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IconPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Right">
                                        <Setter Property="Margin" Value="8,0,0,0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IconPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Top">
                                        <Setter Property="Margin" Value="0,0,0,4"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IconPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Bottom">
                                        <Setter Property="Margin" Value="0,4,0,0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IconPosition, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Only">
                                        <Setter Property="Margin" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                    
                    <!-- Text -->
                    <TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType=UserControl}}"
                               VerticalAlignment="Center"
                               TextAlignment="Center"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"
                               Visibility="{Binding ShowText, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    
                </StackPanel>
            </DataTemplate>
        </Button.ContentTemplate>
    </Button>

</UserControl>