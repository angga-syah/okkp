<UserControl x:Class="InvoiceApp.WPF.Controls.NumericTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="45" d:DesignWidth="200">

    <UserControl.Resources>
        
        <!-- Numeric TextBox Style -->
        <Style x:Key="NumericTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
            <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="0,8,0,8"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontFamily" Value="Consolas, Monaco, monospace"/>
            
            <Style.Triggers>
                <!-- Focus trigger -->
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
                </Trigger>
                
                <!-- Validation error trigger -->
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                </Trigger>
                
                <!-- Read-only trigger -->
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Currency TextBox Style -->
        <Style x:Key="CurrencyTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource NumericTextBoxStyle}">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        </Style>

        <!-- Percentage TextBox Style -->
        <Style x:Key="PercentageTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource NumericTextBoxStyle}">
            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
        </Style>

        <!-- Error Template -->
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <materialDesign:PackIcon DockPanel.Dock="Right" 
                                         Kind="AlertCircle" 
                                         Foreground="{DynamicResource ValidationErrorBrush}" 
                                         Width="16" Height="16"
                                         Margin="5,0,0,0"
                                         VerticalAlignment="Center"/>
                <Border BorderBrush="{DynamicResource ValidationErrorBrush}" 
                        BorderThickness="1" 
                        CornerRadius="3">
                    <AdornedElementPlaceholder/>
                </Border>
            </DockPanel>
        </ControlTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Prefix/Currency Symbol -->
        <TextBlock x:Name="PrefixText"
                   Grid.Column="0" Grid.Row="0"
                   Text="{Binding Prefix, RelativeSource={RelativeSource AncestorType=UserControl}}"
                   VerticalAlignment="Center"
                   Margin="0,0,4,0"
                   FontSize="14"
                   FontWeight="Medium"
                   Foreground="{DynamicResource MaterialDesignBody}"
                   Visibility="{Binding ShowPrefix, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <!-- Main TextBox -->
        <TextBox x:Name="MainTextBox"
                 Grid.Column="1" Grid.Row="0"
                 Style="{DynamicResource NumericTextBoxStyle}"
                 Text="{Binding DisplayText, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=UserControl}}"
                 IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}"
                 materialDesign:HintAssist.Hint="{Binding PlaceholderText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                 materialDesign:HintAssist.HelperText="{Binding HelperText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                 Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                 TextChanged="MainTextBox_TextChanged"
                 PreviewTextInput="MainTextBox_PreviewTextInput"
                 PreviewKeyDown="MainTextBox_PreviewKeyDown"
                 GotFocus="MainTextBox_GotFocus"
                 LostFocus="MainTextBox_LostFocus"/>

        <!-- Suffix -->
        <TextBlock x:Name="SuffixText"
                   Grid.Column="2" Grid.Row="0"
                   Text="{Binding Suffix, RelativeSource={RelativeSource AncestorType=UserControl}}"
                   VerticalAlignment="Center"
                   Margin="4,0,0,0"
                   FontSize="14"
                   FontWeight="Medium"
                   Foreground="{DynamicResource MaterialDesignBody}"
                   Visibility="{Binding ShowSuffix, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <!-- Increment/Decrement Buttons -->
        <StackPanel Grid.Column="3" Grid.Row="0"
                    Orientation="Vertical"
                    VerticalAlignment="Center"
                    Margin="8,0,0,0"
                    Visibility="{Binding ShowSpinButtons, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
            
            <!-- Increment Button -->
            <Button x:Name="IncrementButton"
                    Style="{StaticResource MaterialDesignToolButton}"
                    Width="24" Height="20"
                    Padding="0"
                    Click="IncrementButton_Click"
                    IsEnabled="{Binding CanIncrement, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <materialDesign:PackIcon Kind="ChevronUp" Width="12" Height="12"/>
            </Button>
            
            <!-- Decrement Button -->
            <Button x:Name="DecrementButton"
                    Style="{StaticResource MaterialDesignToolButton}"
                    Width="24" Height="20"
                    Padding="0"
                    Click="DecrementButton_Click"
                    IsEnabled="{Binding CanDecrement, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <materialDesign:PackIcon Kind="ChevronDown" Width="12" Height="12"/>
            </Button>
            
        </StackPanel>

        <!-- Validation Error Display -->
        <TextBlock x:Name="ErrorTextBlock"
                   Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4"
                   Text="{Binding ErrorMessage, RelativeSource={RelativeSource AncestorType=UserControl}}"
                   Foreground="{DynamicResource ValidationErrorBrush}"
                   FontSize="12"
                   Margin="0,4,0,0"
                   TextWrapping="Wrap"
                   Visibility="{Binding HasError, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <!-- Quick Value Buttons -->
        <StackPanel Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4"
                    Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    Margin="0,8,0,0"
                    Visibility="{Binding ShowQuickValues, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
            
            <Button Content="0"
                    Style="{StaticResource MaterialDesignOutlinedButton}"
                    Height="24" MinWidth="32"
                    Padding="4,0"
                    FontSize="11"
                    Click="QuickValueButton_Click"
                    Tag="0"/>
            
            <Button Content="100"
                    Style="{StaticResource MaterialDesignOutlinedButton}"
                    Height="24" MinWidth="32"
                    Padding="4,0"
                    FontSize="11"
                    Margin="4,0,0,0"
                    Click="QuickValueButton_Click"
                    Tag="100"
                    Visibility="{Binding ShowHundred, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
            <Button Content="1K"
                    Style="{StaticResource MaterialDesignOutlinedButton}"
                    Height="24" MinWidth="32"
                    Padding="4,0"
                    FontSize="11"
                    Margin="4,0,0,0"
                    Click="QuickValueButton_Click"
                    Tag="1000"
                    Visibility="{Binding ShowThousand, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
            <Button Content="10K"
                    Style="{StaticResource MaterialDesignOutlinedButton}"
                    Height="24" MinWidth="32"
                    Padding="4,0"
                    FontSize="11"
                    Margin="4,0,0,0"
                    Click="QuickValueButton_Click"
                    Tag="10000"
                    Visibility="{Binding ShowTenThousand, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
        </StackPanel>

    </Grid>
</UserControl>