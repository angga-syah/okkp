<UserControl x:Class="InvoiceApp.WPF.Controls.DatePickerCustom"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="45" d:DesignWidth="300">
    
    <UserControl.Resources>
        <!-- Custom DatePicker Style -->
        <Style x:Key="ModernDatePickerStyle" TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignDatePicker}">
            <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
            <Setter Property="materialDesign:TextFieldAssist.HasLeadingIcon" Value="True"/>
            <Setter Property="materialDesign:TextFieldAssist.LeadingIcon" Value="Calendar"/>
            <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="0,8,0,8"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="45"/>
            
            <Style.Triggers>
                <!-- Focus trigger -->
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
                </Trigger>
                
                <!-- Validation error trigger -->
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Error Template -->
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Right" 
                           Text="!" 
                           Foreground="{DynamicResource ValidationErrorBrush}" 
                           FontWeight="Bold" 
                           Margin="5,0,0,0"
                           VerticalAlignment="Center"/>
                <Border BorderBrush="{DynamicResource ValidationErrorBrush}" 
                        BorderThickness="1" 
                        CornerRadius="3">
                    <AdornedElementPlaceholder/>
                </Border>
            </DockPanel>
        </ControlTemplate>

    </UserControl.Resources>

    <Grid>
        <!-- Main DatePicker -->
        <DatePicker x:Name="MainDatePicker"
                    Style="{StaticResource ModernDatePickerStyle}"
                    SelectedDate="{Binding SelectedDate, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DisplayDateStart="{Binding DisplayDateStart, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    DisplayDateEnd="{Binding DisplayDateEnd, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    BlackoutDates="{Binding BlackoutDates, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    FirstDayOfWeek="{Binding FirstDayOfWeek, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    IsTodayHighlighted="{Binding IsTodayHighlighted, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    SelectedDateFormat="{Binding SelectedDateFormat, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Text="{Binding Text, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                    IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    materialDesign:HintAssist.Hint="{Binding HintText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    materialDesign:HintAssist.HelperText="{Binding HelperText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    SelectedDateChanged="MainDatePicker_SelectedDateChanged"
                    CalendarOpened="MainDatePicker_CalendarOpened"
                    CalendarClosed="MainDatePicker_CalendarClosed"
                    PreviewKeyDown="MainDatePicker_PreviewKeyDown"/>

        <!-- Quick Action Buttons -->
        <StackPanel Orientation="Horizontal" 
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Center"
                    Margin="0,0,35,0"
                    Visibility="{Binding ShowQuickActions, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
            
            <!-- Today Button -->
            <Button x:Name="TodayButton"
                    Style="{StaticResource MaterialDesignToolButton}"
                    ToolTip="Today"
                    Width="24" Height="24"
                    Padding="0"
                    Click="TodayButton_Click"
                    Visibility="{Binding ShowTodayButton, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <materialDesign:PackIcon Kind="CalendarToday" Width="16" Height="16"/>
            </Button>

            <!-- Clear Button -->
            <Button x:Name="ClearButton"
                    Style="{StaticResource MaterialDesignToolButton}"
                    ToolTip="Clear"
                    Width="24" Height="24"
                    Padding="0"
                    Margin="2,0,0,0"
                    Click="ClearButton_Click"
                    Visibility="{Binding ShowClearButton, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <materialDesign:PackIcon Kind="Close" Width="14" Height="14"/>
            </Button>

        </StackPanel>

        <!-- Validation Error Display -->
        <TextBlock x:Name="ErrorTextBlock"
                   Text="{Binding ErrorMessage, RelativeSource={RelativeSource AncestorType=UserControl}}"
                   Foreground="{DynamicResource ValidationErrorBrush}"
                   FontSize="12"
                   Margin="0,46,0,0"
                   TextWrapping="Wrap"
                   Visibility="{Binding HasError, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

    </Grid>
</UserControl>