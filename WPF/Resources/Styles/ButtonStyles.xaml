<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!-- Modern Primary Button Style -->
    <Style x:Key="ModernPrimaryButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="6"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <materialDesign:Card materialDesign:ElevationAssist.Elevation="{Binding Path=(materialDesign:ElevationAssist.Elevation), RelativeSource={RelativeSource TemplatedParent}}"
                                         CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <materialDesign:Ripple Content="{TemplateBinding Content}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   Focusable="False"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Padding="{TemplateBinding Padding}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern Secondary Button Style -->
    <Style x:Key="ModernSecondaryButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="6"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Icon Button Style -->
    <Style x:Key="ModernIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}"/>
        <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Danger Button Style -->
    <Style x:Key="ModernDangerButton" TargetType="Button" BasedOn="{StaticResource ModernPrimaryButton}">
        <Setter Property="Background" Value="#F44336"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D32F2F"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Success Button Style -->
    <Style x:Key="ModernSuccessButton" TargetType="Button" BasedOn="{StaticResource ModernPrimaryButton}">
        <Setter Property="Background" Value="#4CAF50"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#388E3C"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Warning Button Style -->
    <Style x:Key="ModernWarningButton" TargetType="Button" BasedOn="{StaticResource ModernPrimaryButton}">
        <Setter Property="Background" Value="#FF9800"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F57C00"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Flat Button Style -->
    <Style x:Key="ModernFlatButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="6"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern FAB (Floating Action Button) Style -->
    <Style x:Key="ModernFabButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp6"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp12"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Mini FAB Style -->
    <Style x:Key="ModernMiniFabButton" TargetType="Button" BasedOn="{StaticResource ModernFabButton}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp3"/>
    </Style>

    <!-- Modern Toggle Button Style -->
    <Style x:Key="ModernToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignFlatToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="6"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern Split Button Style -->
    <Style x:Key="ModernSplitButton" TargetType="Button" BasedOn="{StaticResource ModernPrimaryButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <materialDesign:Card Grid.Column="0" 
                                             materialDesign:ElevationAssist.Elevation="{Binding Path=(materialDesign:ElevationAssist.Elevation), RelativeSource={RelativeSource TemplatedParent}}"
                                             CornerRadius="6,0,0,6"
                                             Background="{TemplateBinding Background}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   Focusable="False"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Padding="{TemplateBinding Padding}"/>
                        </materialDesign:Card>
                        
                        <Border Grid.Column="1" Width="1" Background="{DynamicResource MaterialDesignDivider}"/>
                        
                        <materialDesign:Card Grid.Column="1" 
                                             materialDesign:ElevationAssist.Elevation="{Binding Path=(materialDesign:ElevationAssist.Elevation), RelativeSource={RelativeSource TemplatedParent}}"
                                             CornerRadius="0,6,6,0"
                                             Background="{TemplateBinding Background}"
                                             Width="32">
                            <materialDesign:Ripple>
                                <materialDesign:PackIcon Kind="ChevronDown" 
                                                         Width="16" Height="16"
                                                         Foreground="{TemplateBinding Foreground}"
                                                         HorizontalAlignment="Center"
                                                         VerticalAlignment="Center"/>
                            </materialDesign:Ripple>
                        </materialDesign:Card>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Animated Button Style with Scale Effect -->
    <Style x:Key="AnimatedButton" TargetType="Button" BasedOn="{StaticResource ModernPrimaryButton}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="1.05" Duration="0:0:0.1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="1.05" Duration="0:0:0.1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="1" Duration="0:0:0.1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="1" Duration="0:0:0.1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Button with Icon and Text -->
    <Style x:Key="IconTextButton" TargetType="Button" BasedOn="{StaticResource ModernPrimaryButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="{Binding Tag, RelativeSource={RelativeSource AncestorType=Button}}"
                                                 Width="16" Height="16"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,8,0"/>
                        <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>