<UserControl x:Class="InvoiceApp.WPF.Views.Shared.MessageBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             Background="Transparent">

    <UserControl.Resources>
        <!-- Animation Storyboards -->
        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                           From="0" To="1" Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="SlideInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(TranslateTransform.Y)"
                           From="-30" To="0" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Message Type Styles -->
        <Style x:Key="MessageIconStyle" TargetType="materialDesign:PackIcon">
            <Setter Property="Width" Value="56"/>
            <Setter Property="Height" Value="56"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding MessageType}" Value="Information">
                    <Setter Property="Kind" Value="Information"/>
                    <Setter Property="Foreground" Value="#2196F3"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MessageType}" Value="Warning">
                    <Setter Property="Kind" Value="Warning"/>
                    <Setter Property="Foreground" Value="#FF9800"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MessageType}" Value="Error">
                    <Setter Property="Kind" Value="CloseCircle"/>
                    <Setter Property="Foreground" Value="#F44336"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MessageType}" Value="Success">
                    <Setter Property="Kind" Value="CheckCircle"/>
                    <Setter Property="Foreground" Value="#4CAF50"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MessageType}" Value="Question">
                    <Setter Property="Kind" Value="HelpCircle"/>
                    <Setter Property="Foreground" Value="#9C27B0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Button Styles based on Message Type -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding MessageType}" Value="Error">
                    <Setter Property="Background" Value="#F44336"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MessageType}" Value="Warning">
                    <Setter Property="Background" Value="#FF9800"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MessageType}" Value="Success">
                    <Setter Property="Background" Value="#4CAF50"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard Storyboard="{StaticResource FadeInAnimation}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <!-- Overlay Background -->
    <Grid Background="#80000000">
        <materialDesign:Card MaxWidth="500" MaxHeight="500" 
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                           Padding="32" materialDesign:ElevationAssist.Elevation="Dp8"
                           Background="{DynamicResource MaterialDesignPaper}">
            
            <materialDesign:Card.RenderTransform>
                <TranslateTransform/>
            </materialDesign:Card.RenderTransform>

            <materialDesign:Card.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Storyboard="{StaticResource SlideInAnimation}"/>
                </EventTrigger>
            </materialDesign:Card.Triggers>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Icon -->
                <materialDesign:PackIcon Grid.Row="0" Style="{StaticResource MessageIconStyle}"
                                       Visibility="{Binding ShowIcon, Converter={StaticResource BoolToVisibilityConverter}}"/>

                <!-- Title -->
                <TextBlock Grid.Row="1" 
                          Text="{Binding Title}" 
                          Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                          HorizontalAlignment="Center" 
                          TextAlignment="Center"
                          Margin="0,0,0,16"
                          Visibility="{Binding HasTitle, Converter={StaticResource BoolToVisibilityConverter}}"/>

                <!-- Message Content -->
                <ScrollViewer Grid.Row="2" 
                             VerticalScrollBarVisibility="Auto" 
                             MaxHeight="250" 
                             Margin="0,0,0,16">
                    <StackPanel>
                        <!-- Main Message -->
                        <TextBlock Text="{Binding Message}" 
                                  Style="{StaticResource MaterialDesignBody1TextBlock}"
                                  TextAlignment="Center" 
                                  TextWrapping="Wrap"
                                  Margin="0,0,0,16"/>

                        <!-- Detailed Information -->
                        <Expander Header="Details" 
                                 IsExpanded="False" 
                                 HorizontalAlignment="Stretch"
                                 Visibility="{Binding HasDetails, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBox Text="{Binding Details, Mode=OneWay}" 
                                    IsReadOnly="True"
                                    TextWrapping="Wrap" 
                                    AcceptsReturn="True"
                                    VerticalScrollBarVisibility="Auto"
                                    MaxHeight="150"
                                    Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                                    FontFamily="Consolas" FontSize="11"
                                    Margin="0,8,0,0"/>
                        </Expander>

                        <!-- Additional Content -->
                        <ContentPresenter Content="{Binding AdditionalContent}" 
                                         HorizontalAlignment="Stretch"
                                         Margin="0,16,0,0"
                                         Visibility="{Binding HasAdditionalContent, Converter={StaticResource BoolToVisibilityConverter}}"/>

                        <!-- Copy to Clipboard Button (for detailed info) -->
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                               Command="{Binding CopyToClipboardCommand}"
                               Content="Copy Details to Clipboard"
                               HorizontalAlignment="Center" Margin="0,8,0,0"
                               Visibility="{Binding CanCopyDetails, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </StackPanel>
                </ScrollViewer>

                <!-- Input Area (for input dialogs) -->
                <StackPanel Grid.Row="3" 
                           Margin="0,0,0,16"
                           Visibility="{Binding IsInputDialog, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBox Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="{Binding InputHint}"
                            materialDesign:ValidationAssist.UsePopup="True"
                            AcceptsReturn="{Binding AcceptsMultilineInput}"
                            Height="{Binding InputHeight, FallbackValue=Auto}"
                            TextWrapping="{Binding InputTextWrapping, FallbackValue=NoWrap}"
                            VerticalScrollBarVisibility="Auto"/>
                </StackPanel>

                <!-- Action Buttons -->
                <StackPanel Grid.Row="4" 
                           Orientation="Horizontal" 
                           HorizontalAlignment="Center" 
                           FlowDirection="{Binding ButtonFlowDirection}">
                    
                    <!-- Third Button (if exists) -->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                           Command="{Binding ThirdButtonCommand}"
                           Content="{Binding ThirdButtonText}"
                           Margin="0,0,12,0" Padding="20,8"
                           Visibility="{Binding ShowThirdButton, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <!-- Cancel/Secondary Button -->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                           Command="{Binding CancelCommand}"
                           Content="{Binding CancelButtonText, FallbackValue='Cancel'}"
                           Margin="0,0,12,0" Padding="20,8"
                           Visibility="{Binding ShowCancelButton, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <!-- Primary Action Button -->
                    <Button Style="{StaticResource PrimaryButtonStyle}"
                           Command="{Binding OkCommand}"
                           Content="{Binding OkButtonText, FallbackValue='OK'}"
                           Padding="20,8" IsDefault="True"/>
                </StackPanel>
            </Grid>
        </materialDesign:Card>

        <!-- Auto-dismiss timer (if applicable) -->
        <Border HorizontalAlignment="Right" VerticalAlignment="Top" 
               Background="#80000000" CornerRadius="4" Padding="8,4" Margin="16"
               Visibility="{Binding ShowTimer, Converter={StaticResource BoolToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Kind="Timer" Width="16" Height="16" 
                                       Foreground="White" VerticalAlignment="Center" Margin="0,0,4,0"/>
                <TextBlock Text="{Binding RemainingTime, StringFormat='{0}s'}" 
                          Foreground="White" VerticalAlignment="Center"
                          Style="{StaticResource MaterialDesignCaptionTextBlock}"/>
            </StackPanel>
        </Border>

        <!-- Close button (X) in corner -->
        <Button Style="{StaticResource MaterialDesignToolButton}"
               Command="{Binding CloseCommand}"
               HorizontalAlignment="Right" VerticalAlignment="Top"
               Margin="8" Width="32" Height="32"
               Visibility="{Binding ShowCloseButton, Converter={StaticResource BoolToVisibilityConverter}}">
            <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
        </Button>

        <!-- Click outside to close (if enabled) -->
        <Grid.InputBindings>
            <MouseBinding MouseAction="LeftClick" 
                         Command="{Binding ClickOutsideCommand}"
                         CommandParameter="ClickOutside"/>
        </Grid.InputBindings>
    </Grid>
</UserControl>